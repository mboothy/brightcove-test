{"version":3,"sources":["App.js","index.js"],"names":["App","useState","key","setKey","liveJob","setLiveJob","Date","startTime","setStartTime","endTime","setEndTime","response","setResponse","keyForm","setKeyForm","liveJobForm","setLiveJobForm","className","id","value","onChange","e","target","style","marginLeft","onClick","toTimeString","getTime","config","headers","body","res","axios","post","JSON","stringify","console","log","sendClip","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAoGeA,MA9Ff,WACE,MAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAAIK,MAA/C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BP,mBAAS,IAAIK,MAA3C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCT,qBAAhC,mBAAOU,EAAP,KAAiBC,EAAjB,KAEA,EAA8BX,mBAAS,IAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,EAAsCb,mBAAS,IAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KA6CA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACA,sBAAKC,GAAG,cAAcD,UAAU,UAAhC,UACE,qBAAKA,UAAU,GAAf,SACE,8BAAG,iDAAH,IAA4Bf,OAE9B,uBAAOiB,MAAON,EAASO,SAAU,SAAAC,GAAC,OAAIP,EAAWO,EAAEC,OAAOH,UAC1D,wBAAQI,MAAO,CAACC,WAAY,OAAQC,QAAS,SAAAJ,GAjDjDlB,EAAOU,EAASC,EAAW,MAiDvB,2BAEF,sBAAKI,GAAG,eAAeD,UAAU,UAAjC,UACE,qBAAKA,UAAU,GAAf,SACE,8BAAG,kDAAH,IAA6Bb,OAE/B,uBAAOe,MAAOJ,EAAaK,SAAU,SAAAC,GAAC,OAAIL,EAAeK,EAAEC,OAAOH,UAClE,wBAAQI,MAAO,CAACC,WAAY,OAAQC,QAAS,SAAAJ,GArDjDhB,EAAWQ,EAASG,EAAe,MAqD/B,8BAIF,sBAAKE,GAAG,QAAR,UACE,sBAAKD,UAAU,QAAf,UACE,oBAAIA,UAAU,OAAd,mBACA,oBAAIA,UAAU,OAAd,SAAsBV,EAAUmB,iBAChC,qBAAIT,UAAU,OAAd,oBAA6BV,EAAUoB,aACvC,wBAAQF,QAAS,SAACJ,GAAD,OAAOb,EAAa,IAAIF,OAAzC,2BAEF,sBAAKW,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAd,iBACA,oBAAIA,UAAU,OAAd,SAAsBR,EAAQiB,iBAC9B,qBAAIT,UAAU,OAAd,oBAA6BR,EAAQkB,aACrC,wBAAQF,QAAS,SAACJ,GAAD,OAjER,SAACA,GAChBX,EAAW,IAAIJ,MAEf,IAAMsB,EAAS,CACbC,QAAS,CACP,8BAA+B,IAC/B,+BAAgC,oCAC9B,eAAgB,mBAChB,YAAa3B,IAGb4B,EAAO,CACX,YAAe1B,EACb,QAAU,CACR,CACE,MAAS,qBACT,WAAcG,EAAUoB,UACxB,SAAYlB,EAAQkB,UACpB,YAAe,mCACf,WAAc,CACZ,MAAS,CACP,KAAQ,qBACR,OAAU,CACR,kBAAkB,QAO1BI,EAAMC,IAAMC,KAAN,UAlDA,YAkDyBH,EAAMF,GAC3ChB,EAAYsB,KAAKC,UAAUJ,IAC3BK,QAAQC,IAAIN,GAiCkBO,IAAxB,sCAGJ,sBAAKpB,GAAG,WAAR,UACE,0CACA,+BAAOP,WCzFf4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.93423a9e.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nconst API_URL = \"/v1/vods\"\n\nfunction App() {\n  const [key, setKey] = useState(null)\n  const [liveJob, setLiveJob] = useState(null)\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date())\n  const [response, setResponse] = useState()\n\n  const [keyForm, setKeyForm] = useState(\"\")\n  const [liveJobForm, setLiveJobForm] = useState(\"\")\n\n\n  const updateKey = (e) => {\n    setKey(keyForm, setKeyForm(\"\"));\n  }\n  const updateLiveJob = (e) => {\n    setLiveJob(keyForm, setLiveJobForm(\"\"));\n  }\n\n  const sendClip = (e) => {\n    setEndTime(new Date())\n\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n          'Content-Type': 'application/json',\n          'X-API-KEY': key\n      }\n  }\n    const body = {\n      \"live_job_id\": liveJob,\n        \"outputs\":[\n          {\n            \"label\": \"Test Clip From API\",\n            \"start_time\": startTime.getTime(),\n            \"end_time\": endTime.getTime(),\n            \"credentials\": \"USER_VIDEOCLOUD_CREDENTIAL_LABEL\",\n            \"videocloud\": {\n              \"video\": {\n                \"name\": \"Test Clip From API\",\n                \"ingest\": {\n                  \"capture-images\": true\n                }\n            }\n          }\n        }\n      ]\n    }\n    const res = axios.post(`${API_URL}`, body, config );\n    setResponse(JSON.stringify(res))\n    console.log(res)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"settings\">\n      <div id=\"keySettings\" className=\"setting\">\n        <div className=\"\">\n          <p><b>Current API Key:</b> {key}</p>\n        </div>\n        <input value={keyForm} onChange={e => setKeyForm(e.target.value)}/> \n        <button style={{marginLeft: '5px'}} onClick={e => updateKey(e)}>Update Key</button>\n      </div>\n      <div id=\"liveSettings\" className=\"setting\">\n        <div className=\"\">\n          <p><b>Current Live Job:</b> {liveJob}</p>\n        </div>\n        <input value={liveJobForm} onChange={e => setLiveJobForm(e.target.value)}/> \n        <button style={{marginLeft: '5px'}} onClick={e => updateLiveJob(e)}>Update Key</button>\n      </div>\n      </div>\n\n      <div id=\"times\">\n        <div className=\"start\">\n          <h4 className=\"time\">Start</h4>\n          <h3 className=\"time\">{startTime.toTimeString()}</h3>\n          <h3 className=\"time\">Epoch: {startTime.getTime()}</h3>\n          <button onClick={(e) => setStartTime(new Date())}>Event Wipe</button>\n        </div>\n        <div className=\"end\">\n          <h4 className=\"time\">End</h4>\n          <h3 className=\"time\">{endTime.toTimeString()}</h3>\n          <h3 className=\"time\">Epoch: {endTime.getTime()}</h3>\n          <button onClick={(e) => sendClip(e)}>Last Results Clear</button>\n        </div>\n      </div>\n      <div id=\"response\">\n        <h3>Response</h3>\n        <code>{response}</code>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// {\n//   \"live_job_id\":\"PUT-LIVE-JOB-ID-HERE\",\n//     \"outputs\":[\n//       {\n//         \"label\": \"60 secs - epoch time\",\n//         \"start_time\": 1516652694,\n//         \"end_time\": 1516652754,\n//         \"credentials\": \"USER_VIDEOCLOUD_CREDENTIAL_LABEL\",\n//         \"videocloud\": {\n//           \"video\": {\n//           \"name\": \"One Minute Clip\",\n//           \"tags\": [\"live\", \"clip\"]\n//           },\n//             \"ingest\": {\n//             \"capture-images\": true\n//         }\n//       }\n//     }\n//   ]\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}